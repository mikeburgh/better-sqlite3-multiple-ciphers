name: prebuild

on:
  workflow_dispatch:

env:
  NODE_BUILD_CMD: npx --no-install prebuild -r node -t 18.0.0 -t 20.0.0 -t 22.0.0 --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }}
  ELECTRON_BUILD_CMD: npx --no-install prebuild -r electron -t 26.0.0 -t 27.0.0 -t 28.0.0 -t 29.0.0 -t 30.0.0 -t 31.0.0 -t 32.0.0 -t 33.0.0 -t 34.0.0 -t 35.0.0 -t 36.0.0 -t 37.0.0 --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }}

jobs:
  prebuild:
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2025
    name: Prebuild on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - if: ${{ startsWith(matrix.os, 'windows') }}
        run: pip.exe install setuptools
      - if: ${{ startsWith(matrix.os, 'macos') }}
        run: brew install python-setuptools
      - if: ${{ !startsWith(matrix.os, 'windows') && !startsWith(matrix.os, 'macos') }}
        run: python3 -m pip install setuptools
      - if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          sudo apt update
          sudo apt install gcc-10 g++-10 -y
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10
      - run: npm install --ignore-scripts
      - run: ${{ env.NODE_BUILD_CMD }}
      - run: ${{ env.ELECTRON_BUILD_CMD }}
      - if: matrix.os == 'windows-2025'
        run: |
          ${{ env.NODE_BUILD_CMD }} --arch ia32
          npx --no-install prebuild -r node -t 20.0.0 -t 22.0.0 --include-regex 'better_sqlite3.node$' --arch arm64 -u ${{ secrets.GITHUB_TOKEN }}
          ${{ env.ELECTRON_BUILD_CMD }} --arch ia32
          ${{ env.ELECTRON_BUILD_CMD }} --arch arm64
